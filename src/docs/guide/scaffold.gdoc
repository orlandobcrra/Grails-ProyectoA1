http://grails-plugins.github.com/grails-cloud-foundry/docs/manual/guide/index.html
http://blog.springsource.com/2011/04/12/one-step-deployment-with-grails-and-cloud-foundry/
http://grails-plugins.github.com/grails-cloud-foundry-ui/docs/manual/guide/index.html


https://github.com/robokaso/grails-kickstart

http://grails.org/plugin/kickstart-with-bootstrap

After installation you can call "grails kickstartWithBootstrap" which will copy several files into your project. It will overwrite only few files (e.g., in conf, src, and views) - you should use it only on fresh new Grails project.

Afterwards create your domain classes (or copy them into the project) and generate contollers and views - they will now use the Bootstrap framework!


grails install-plugin kickstart-with-bootstrap

grails kickstart-with-bootstrap

Replacing exisiting views and installing new ones ...
Overwrite existing layouts & base GSPs (e.g., index.gsp)
  in C:\Users\Personal\Documents\NetBeansProjects\ProyectoA1/grails-app/views?[y,n] 

Adding the Home controller ...
> 
Overwrite existing HomeController.groovy file
  in C:\Users\Personal\Documents\NetBeansProjects\ProyectoA1/grails-app/controllers/?[y,n] 

Installing css, js, and images for Bootstrap ...
Installing and changing conf files ...
> 
Overwrite existing URLMappings.groovy file
  in C:\Users\Personal\Documents\NetBeansProjects\ProyectoA1/grails-app/conf/?[y,n] 

| Kickstart installed successfully



default.language.button

BuildConfig.groovy :
dependencies {
        // specify dependencies here under either 'build', 'compile', 'runtime', 'test' or 'provided' scopes eg.

        // runtime 'mysql:mysql-connector-java:5.1.16'
        runtime 'postgresql:postgresql:8.4-702.jdbc3' xxxxx
    }

grails integrate-with --git


clic derecho / control de versiones/ Inicializar Repositorio Git

cd / git / commit 

heroku create --stack cedar

Create Heroku Cedar app:

$ heroku create --stack cedar
Creating smooth-night-8061... done, stack is cedar
http://smooth-night-8061.herokuapp.com/ | git@heroku.com:smooth-night-8061.git
Git remote heroku added
Deploy to Heroku:




$ git push heroku master
Counting objects: 73, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (69/69), done.
Writing objects: 100% (73/73), 97.82 KiB, done.
Total 73 (delta 2), reused 0 (delta 0)

-----> Heroku receiving push
-----> Grails app detected
-----> Grails 2.0.0 app detected
-----> Installing Grails 2.0.0..... done
-----> executing grails -plain-output -Divy.default.ivy.user.dir=/app/tmp/repo.git/.cache war

       |Loading Grails 2.0.0.
       ...
       |Done creating WAR target/HelloWorld-0.1.war
-----> No server directory found. Adding jetty-runner 7.5.4.v20111024 automatically.
-----> Discovering process types
       Procfile declares types  -> (none)
       Default types for Grails -> web
-----> Compiled slug size is 30.6MB
-----> Launching... done, v3
       http://smooth-night-8061.herokuapp.com deployed to Heroku


 heroku open




